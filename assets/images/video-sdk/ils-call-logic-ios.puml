
@startuml

!include agora_skin.iuml

actor "User" as USR

box "Your app"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open app
APP -> APP: Initiate the Video SDK engine:\n  agoraEngine = AgoraRtcEngineKit.sharedEngine
APP -> APP: Start video in the engine:\n  agoraEngine.enableVideo()

group Host
USR -> APP: Start a live streaming event
APP -> APP: In an live streaming event, only the hosts broadcast to the channel:\n agoraEngine.setClientRole(.broadcaster)
APP -> APP: Start local video:\n  agoraEngine.setupLocalVideo(videoCanvas)
APP -> API: Join the channel:\n agoraEngine?.joinChannel
APP -> API: Send data stream
end

group Audience
USR -> APP: Join live streaming event
APP -> APP: In an live streaming event, the audience views the stream sent by channel hosts:\n agoraEngine.setClientRole(.audience)
APP -> API: Join the channel:\n agoraEngine?.joinChannel
APP -> API: Retrieve streaming from the hosts: \n agoraEngine.setupRemoteVideo(videoCanvas)
API <-> APP: Receive data streams

end

USR -> APP: Leave live streaming event
APP -> API: Stop local video:\n agoraEngine.stopPreview()
APP -> API: Leave the channel: \n agoraEngine.leaveChannel(nil)

USR -> APP: Close app
APP -> APP: Clean up local resources: \n AgoraRtcEngineKit.destroy()

@enduml



!include agora_skin.iuml

actor "User" as USR

box "Your app"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open App
APP -> APP: AgoraRTC.createClient
APP -> APP: App.init
APP -> API: Client.join
API -> APP : join accepted



group Host
USR -> APP: Start broadcast
APP -> APP: stream = AgoraRTC.createStream
APP -> APP: stream.init
APP -> APP: stream.play
APP -> API: Client.publish
APP -> API: Send data stream
end

group Audience

USR -> APP: Join broadcast
API -> APP: Client.on("stream-added")
APP -> API: Client.subscribe
API -> APP: Client.on("stream-subscribed")
API -> APP: Receive data stream
APP -> APP: stream.play

end

USR -> APP: Leave broadcast
APP -> API: Client.leave


@enduml
