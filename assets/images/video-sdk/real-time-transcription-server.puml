@startuml 
!include agora_skin.iuml

box "Implemented by you"
participant "Your APP" as APP
participant "API Server" as API
end box

box "Agora"
participant "Real-Time Transcription\n Server" as RTT
end box

group Start a task
APP -> API: Start real-time transcription \n<channel name>
API -> API: Check user privileges and payment options (optional)
API -> RTT: Send an acquire request to fetch a builderToken
API <- RTT: Receive a builderToken in response
API -> API: Store builderToken against appID and channel name

API -> API: Create JSON configuration for starting \nreal-time transcription
API -> RTT: Send a start request containing the \nbuilderToken and JSON configuration
API <- RTT: Receive the status and taskId in response
API -> API: Store taskId against appID and channel name
APP <- API: Success <subtitle data uid>
APP -> APP: Display text
end

group Query task status
API -> API: Retrieve taskId and builderToken
API -> RTT: Send a query request containing \nthe taskId and builderToken 
API <- RTT: Receive the current task status in response
APP <- API: Send the status to the client
end

group Stop the task
APP -> API: Stop real-time transcription
API -> API: Retrieve taskId and builderToken
API -> RTT: Send a stop request containing \nthe taskId and builderToken 
API <- RTT: Receive a response confirming success
end

@enduml
