@startuml on-premise-recording-quickstart-logic-cpp
!include agora_skin.iuml

actor "User" as USR

box "Your app"
participant "Recording SDK" as APP
end box

box "Agora"
participant "SD-RTN" as API
end box

USR -> APP: Open App

group Create Agora service 
APP -> APP: AgoraService() : \n Create an instance
APP -> APP: initialize(): \n Initialize the instance 
end

group Configure a media recorder instance
APP -> APP: createAgoraMediaComponentFactory(): \n Create a media factory component
APP -> APP: createMediaRtcRecorder(): \n Create a media recorder
APP -> APP: initialize(): \n Initialize the instance
APP -> APP: registerRecorderEventHandle(): \n Register events
end

USR -> APP: Join a channel

group Join a channel and start recording
APP -> APP: setRecorderConfig(): \n Set recorder configuration
APP -> API: joinChannel(): \n Join a channel
APP -> API: subscribeAllAudio(): \n Subscribe all audio streams
APP -> API: subscribeAllVideo(): \n Subscribe all video streams
APP -> API: startRecording(): \n Start audio and video recording
API -> APP: media streams
end

USR -> APP: Close App

group Clean up resources
APP -> API: unsubscribeAllAudio(): \n Unsubscribe all audio
APP -> API: unsubscribeAllVideo(): \n Unsubscribe all video
APP -> APP: stopRecording(): \n Stop recording media streams
APP -> APP: unregisterRecorderEventHandle(): \n Unregister events
APP -> API: leaveChannel(): \n Leave the channel
APP -> APP: release(): \n Release the Agora service instance
end

@enduml