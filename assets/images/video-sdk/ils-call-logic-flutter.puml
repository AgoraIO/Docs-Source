@startuml ils-call-logic-flutter
!include agora_skin.iuml

actor "User" as USR

box "Your app"
participant "Video SDK" as APP
end box

box "Agora"
participant "SD-RTN" as API
end box

USR -> APP: Open App
APP -> APP: Initiate the Agora Video SDK engine\n agoraEngine = RtcEngine.create
APP -> APP: Enable the video module:\n agoraEngine.enableVideo

group Host

USR -> APP: Start a live streaming event
APP -> APP: Retrieve authentication token to join channel
APP -> APP: Enable live streaming in the channel:\n agoraEngine.setChannelProfile(ChannelProfile.LiveBroadcasting)
APP -> API: Set the role as host:\n  agoraEngine.setClientRole(ClientRole.Broadcaster)
APP -> API: Join a channel as host: \nagoraEngine.joinChannel
API -> APP: on "joinChannelSuccess"

APP -> API: Publish
APP -> API: Send data stream
APP -> APP: Widget = RtcLocalView.SurfaceView()
end

group Audience
USR -> APP: Join a live streaming event
APP -> APP: Retrieve authentication token to join channel
APP -> API: Set the user role as audience: \n agoraEngine.setClientRole(ClientRole.Audience)
APP -> API: Join the channel: \n agoraEngine.joinChannel
API -> APP: on "joinChannelSuccess"

APP -> API: Retrieve streaming from the hosts: \n on "userJoined"
API -> APP: Receive data stream\n Widget = RtcRemoteView.SurfaceView()
end

USR -> APP: Leave broadcast
APP -> API: agoraEngine.leaveChannel()

USR -> APP: Close app
APP -> APP: Clean up local resources\n  agoraEngine.destroy()

@enduml
