@startuml
!include agora_skin.iuml

actor "User" as USR

box "Your game"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open game
APP -> APP: Create an RtcEngine instance: \n RtcEngine = Agora.Rtc.RtcEngine.CreateAgoraRtcEngine()
APP -> API: Set the context: \n RtcEngineContext context = new RtcEngineContext(_appID, 0, true, \n CHANNEL_PROFILE_TYPE.CHANNEL_PROFILE_LIVE_BROADCASTING, \nAUDIO_SCENARIO_TYPE.AUDIO_SCENARIO_DEFAULT)
APP -> APP: Initialize RtcEngine: \n RtcEngine.Initialize(context)

group Video Call
USR -> APP: Start call
APP -> APP: Enable the video module: \n RtcEngine.EnableVideo()
APP -> API: Set the user role as broadcaster: \n RtcEngine.SetClientRole(CLIENT_ROLE_TYPE.CLIENT_ROLE_BROADCASTER)
APP -> API: Join call: \n RtcEngine.JoinChannel()
APP <-> API: Receive and send data stream
end

USR -> APP: Leave call
APP -> API: Leave the channel: \n RtcEngine.LeaveChannel()
APP -> APP: Disable the video modules: \n RtcEngine.DisableVideo()

USR -> APP: Close game
APP -> APP: Clean up local resources: \n  RtcEngine.Dispose()


@enduml
