
@startuml
!include agora_skin.iuml

actor "User" as USR

box "Your game"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open game
APP -> APP: Initiate the Agora Video SDK engine: \n agoraEngine=IRtcEngine.GetEngine()
APP -> APP: Setup the local video stream: \n agoraEngine.EnableVideo()
APP -> APP: agoraEngine.EnableVideoObserver()


group Host
USR -> APP: Start a live streaming event
APP->APP: Retrieve authentication token to join channel
APP -> APP: Enable live streaming in the channel: \n agoraEngine.SetChannelProfile(CHANNEL_PROFILE.CHANNEL_PROFILE_LIVE_BROADCASTING)
APP -> API: Set the user role as host: \n agoraEngine.SetClientRole(CLIENT_ROLE_TYPE.CLIENT_ROLE_BROADCASTER)
APP -> API: Join a channel as host: \n agoraEngine.JoinChannelByKey()
APP -> API: Send data stream
end

group Audience
USR -> APP: Join the live streaming event
APP->APP: Retrieve authentication token to join channel
APP -> API: Set the user role as audience: \n agoraEngine.SetClientRole(CLIENT_ROLE_TYPE.CLIENT_ROLE_AUDIENCE)
APP -> API: Join the channel: \n agoraEngine.JoinChannelByKey()
API -> APP: A callback to start remote video: \n  onUserJoined()
APP -> API: Retrieve streaming from the hosts: \n \n RemoteView.SetForUser(uid)
API -> APP: Receive data Stream
end

USR -> APP: Leave the live streaming event
APP -> API: Leave the channel: \n agoraEngine.leaveChannel()
APP -> APP: Stop local video stream: \n agoraEngine.DisableVideo()
APP -> APP: Disable the video observer: \n agoraEngine.DisableVideoObserver()

USR -> APP: Close game
APP -> APP: Clean up local resources: \n  agoraEngine.destroy()


@enduml

