<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="675px" preserveAspectRatio="none" style="width:906px;height:675px;background:#00000000;" version="1.1" viewBox="0 0 906 675" width="906px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="673.5859" style="stroke:#0A9EFD;stroke-width:1.0;" width="904" x="0" y="0"/><rect fill="#F3F3F3" height="663.5859" style="stroke:#0A9EFD;stroke-width:1.0;" width="460" x="16" y="6"/><text fill="#0A9EFD" font-family="Roboto" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="168" x="162" y="21.4688">Implemented by you</text><rect fill="#F3F3F3" height="663.5859" style="stroke:#0A9EFD;stroke-width:1.0;" width="157" x="733.5" y="6"/><text fill="#0A9EFD" font-family="Roboto" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="151" x="736.5" y="21.4688">Provided by Agora</text><rect height="309.8594" style="stroke:#0A9EFD;stroke-width:2.0;fill:none;" width="890" x="10" y="77.332"/><rect height="216.9063" style="stroke:#0A9EFD;stroke-width:2.0;fill:none;" width="848.5" x="10" y="401.1914"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="74" x2="74" y1="60.332" y2="635.0977"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="451" x2="451" y1="60.332" y2="635.0977"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="811.5" x2="811.5" y1="60.332" y2="635.0977"/><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="108" x="20" y="28.8438"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="94" x="27" y="49.3789">Token server</text><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="108" x="20" y="634.0977"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="94" x="27" y="654.6328">Token server</text><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="42" x="430" y="28.8438"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="437" y="49.3789">App</text><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="42" x="430" y="634.0977"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="437" y="654.6328">App</text><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="73" x="775.5" y="28.8438"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="782.5" y="49.3789">SD-RTN</text><rect fill="#FFFFFF" height="30.4883" style="stroke:#0A9EFD;stroke-width:2.0;" width="73" x="775.5" y="634.0977"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="782.5" y="654.6328">SD-RTN</text><path d="M10,77.332 L303,77.332 L303,85.332 L293,95.332 L10,95.332 L10,77.332 " fill="#EEEEEE" style="stroke:#0A9EFD;stroke-width:1.0;"/><rect fill="none" height="309.8594" style="stroke:#0A9EFD;stroke-width:2.0;" width="890" x="10" y="77.332"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="248" x="25" y="91.8672">Join a channel with authentication</text><polygon fill="#0A9EFD" points="85,130.7969,75,134.7969,85,138.7969,81,134.7969" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="79" x2="450" y1="134.7969" y2="134.7969"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="269" x="125.5" y="113.3555">Request a token using channel name,</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="204" x="163" y="129.8438">role, token type, and user ID</text><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="74" x2="116" y1="181.7734" y2="181.7734"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="116" x2="116" y1="181.7734" y2="194.7734"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="75" x2="116" y1="194.7734" y2="194.7734"/><polygon fill="#0A9EFD" points="85,190.7734,75,194.7734,85,198.7734,81,194.7734" style="stroke:#0A9EFD;stroke-width:1.0;"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="153" x="81" y="160.332">Validate user against</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="118" x="86" y="176.8203">internal security</text><polygon fill="#0A9EFD" points="439,221.2617,449,225.2617,439,229.2617,443,225.2617" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="74" x2="445" y1="225.2617" y2="225.2617"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="311" x="107" y="220.3086">Generate a token and return it to the client</text><polygon fill="#0A9EFD" points="800,268.2383,810,272.2383,800,276.2383,804,272.2383" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="451" x2="806" y1="272.2383" y2="272.2383"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="170" x="544" y="250.7969">Join a channel with uid,</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="179" x="542" y="267.2852">channel name, and token</text><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="812" x2="854" y1="319.2148" y2="319.2148"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="854" x2="854" y1="319.2148" y2="332.2148"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="813" x2="854" y1="332.2148" y2="332.2148"/><polygon fill="#0A9EFD" points="823,328.2148,813,332.2148,823,336.2148,819,332.2148" style="stroke:#0A9EFD;stroke-width:1.0;"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="819" y="297.7734">Validate</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="69" x="819" y="314.2617">the token</text><polygon fill="#0A9EFD" points="462,375.1914,452,379.1914,462,383.1914,458,379.1914" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="456" x2="811" y1="379.1914" y2="379.1914"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="183" x="537.5" y="357.75">Trigger the callback after</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="193" x="535" y="374.2383">adding user to the channel</text><path d="M10,401.1914 L148,401.1914 L148,409.1914 L138,419.1914 L10,419.1914 L10,401.1914 " fill="#EEEEEE" style="stroke:#0A9EFD;stroke-width:1.0;"/><rect fill="none" height="216.9063" style="stroke:#0A9EFD;stroke-width:2.0;" width="848.5" x="10" y="401.1914"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="93" x="25" y="415.7266">Renew token</text><polygon fill="#0A9EFD" points="462,438.168,452,442.168,462,446.168,458,442.168" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="456" x2="811" y1="442.168" y2="442.168"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="299" x="482" y="437.2148">Trigger event: Token Privilege will Expire</text><polygon fill="#0A9EFD" points="85,485.1445,75,489.1445,85,493.1445,81,489.1445" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="79" x2="450" y1="489.1445" y2="489.1445"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="311" x="104.5" y="467.7031">Request a fresh token using channel name,</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="204" x="163" y="484.1914">role, token type, and user ID</text><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="74" x2="116" y1="519.6328" y2="519.6328"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="116" x2="116" y1="519.6328" y2="532.6328"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="75" x2="116" y1="532.6328" y2="532.6328"/><polygon fill="#0A9EFD" points="85,528.6328,75,532.6328,85,536.6328,81,532.6328" style="stroke:#0A9EFD;stroke-width:1.0;"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="313" x="81" y="514.6797">Validate user request against internal logic</text><polygon fill="#0A9EFD" points="439,559.1211,449,563.1211,439,567.1211,443,563.1211" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="74" x2="445" y1="563.1211" y2="563.1211"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="353" x="86" y="558.168">Generate a fresh token and return it to the client</text><polygon fill="#0A9EFD" points="800,606.0977,810,610.0977,800,614.0977,804,610.0977" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="451" x2="806" y1="610.0977" y2="610.0977"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="150" x="554" y="588.6563">Send the fresh token</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="201" x="531" y="605.1445">with a RenewToken request</text><!--MD5=[aa3ca2a222bbe0df1bf3ffb3c70509d1]
@startuml authentication-logic
!include agora_skin.iuml

box "Implemented by you"
participant "Token server" as SVR
participant "App" as APP
end box

box "Provided by Agora"
participant "SD-RTN" as API
end box

group Join a channel with authentication
APP -> SVR: Request a token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user against \n internal security
APP <- SVR: Generate a token and return it to the client
APP -> API: Join a channel with uid, \nchannel name, and token
API -> API: Validate \nthe token
API -> APP: Trigger the callback after \nadding user to the channel
end

group Renew token
API -> APP: Trigger event: Token Privilege will Expire
APP -> SVR: Request a fresh token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user request against internal logic
APP <- SVR: Generate a fresh token and return it to the client
APP -> API: Send the fresh token \nwith a RenewToken request
end

@enduml

@startuml authentication-logic

scale max 1000 width
skinparam linetype ortho
hide stereotype

skinparam backgroundColor transparent
skinparam Shadowing false
skinparam BoundaryBackgroundColor transparent
skinparam BoundaryBorderColor #0a9efdff
skinparam DiagramBorderColor #0a9efdff
skinparam defaultTextAlignment center
skinparam SequenceMessageAlign center
skinparam ReferenceBorderThickness 2

skinparam sequence {

    ActorBorderThickness 3
   	ActorBorderColor #0a9efdff
	ActorBackgroundColor transparent
	ActorFontColor #0a9efdff
	ActorFontName Roboto
    ActorFontStyle bold
    ActorFontSize 14

    AgentBackgroundColor #0a9efdff

   	ArrowFontColor #0a9efdff
   	ArrowFontSize 14
   	ArrowFontStyle bold
    ArrowColor #ee4c14
    ArrowThickness 2

    RectangleBorderThickness 3
    BoxBackgroundColor #f3f3f3
    BoxBorderColor #0a9efdff

   	BoxFontColor #0a9efdff
   	BoxFontName Roboto
   	BoxFontStyle bold
   	BoxFontSize 16

    BoundaryBackgroundColor #0a9efdff
    BoundaryBorderColor #0a9efdff
    BoundaryFontColor #0a9efdff
    BoundryFontName Roboto
    BoundaryStereotypeFontColor #0a9efdff

    ClassBorderColor #0a9efdff
    ComponentBorderColor #0a9efdff

    DividerBackgroundColor white
    DividerBorderColor #0a9efdff
    DividerBorderThickness 3
    DividerFontColor #0a9efdff
    DividerFontName Roboto
    DividerFontSize bold
    DividerFontStyle 14

    GroupBorderColor #0a9efdff
    GroupBorderThickness 2
    GroupFontName Roboto
    GroupFontSize 14
    GroupFontColor #0a9efdff
    GroupHeaderFontColor #0a9efdff
    GroupHeaderFontName Roboto
    GroupHeaderFontSize 14
    GroupHeaderFontStyle bold

   	LifeLineBorderColor #0a9efdff
   	LifeLineBackgroundColor #0a9efdff
   	LifeLineFontColor  #0a9efdff

   	ParticipantBorderColor #0a9efdff
   	ParticipantBackgroundColor white
   	ParticipantFontSize 14
   	ParticipantFontStyle bold
   	ParticipantFontName Roboto
   	ParticipantFontColor #0a9efdff
    ParticipantBorderThickness 2

    ReferenceBorderThickness 2



    TitleFontColor #0a9efdff
    TitleFontName Roboto
    TitleFontSize 18
    TitleBorderThickness 5

}
skinparam interface {
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff
  BorderThickness 1
  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bolds

}


skinparam usecase {
  BackgroundColor #FFFFFF
  BorderColor #ee4c14
  BorderThickness 1
  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam note {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 1

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam activity {

  BackgroundColor #FFFFFF
  DiamondBackgroundColor #FFFFFF
  DiamondBorderColor #0a9efdff
  BorderColor #0a9efdff
  BorderThickness 4
  DiamondBackgroundColor #FFFFFF
  DiamondBorderColor #0a9efdff
  DiamondFontColor #0a9efdff
  activityDiamondFontName Roboto
  activityDiamondFontSize 14
  DiamondFontStyle bold
  StartColor #0a9efdff
  StopColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam card {
  BackgroundColor transparent
  BorderColor transparent
  BorderThickness 0
  FontColor transparent
}


skinparam rectangle {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam agent {

  BackgroundColor #FFFFFF
  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam folder {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam file {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam cloud {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam class {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 1

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold



}

skinparam component {

  BackgroundColor  #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold
}



skinparam database {

  BackgroundColor #f3f3f3

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}


skinparam frame {

  ArrowColor #0a9efdff

  BackgroundColor #f3f3f3
  BorderColor #0a9efdff
  BorderThickness 4

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold
}


skinparam node {

  ArrowColor #0a9efdff

  BorderThickness 2
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam package {
  BorderThickness 2
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}


skinparam partition {

  BackgroundColor #f3f3f3

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam ArrowFontColor #0a9efdff
skinparam ArrowFontSize 14
skinparam ArrowFontStyle bold
skinparam ArrowColor #0a9efdff
skinparam ArrowThickness 2
skinparam ArrowFontName Roboto

skinparam linetype ortho
hide stereotype








box "Implemented by you"
participant "Token server" as SVR
participant "App" as APP
end box

box "Provided by Agora"
participant "SD-RTN" as API
end box

group Join a channel with authentication
APP -> SVR: Request a token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user against \n internal security
APP <- SVR: Generate a token and return it to the client
APP -> API: Join a channel with uid, \nchannel name, and token
API -> API: Validate \nthe token
API -> APP: Trigger the callback after \nadding user to the channel
end

group Renew token
API -> APP: Trigger event: Token Privilege will Expire
APP -> SVR: Request a fresh token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user request against internal logic
APP <- SVR: Generate a fresh token and return it to the client
APP -> API: Send the fresh token \nwith a RenewToken request
end

@enduml

PlantUML version 1.2021.16(Wed Dec 08 18:25:22 CET 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: GG
--></g></svg>