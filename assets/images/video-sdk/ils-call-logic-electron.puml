
@startuml ils-call-logic-electron

!include agora_skin.iuml

actor "User" as USR

box "Your app"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open App
APP -> APP: Create an instance of the Video SDK engine:\n agoraEngine = agoraEngine.createAgoraRtcEngine
APP -> APP: Initialize the created instance: \n agoraEngine.initialize
APP -> APP: Setup the callback functions: \n agoraEngine.registerEventHandler
APP -> APP: Set the channel profile: \n agoraEngine.setChannelProfile
group Host
USR -> APP: Start live streaming event
APP -> APP: Setup local video: \n  agoraEngine.setupLocalVideo
APP -> APP: Enable local video capturer: \n agoraEngine.enableVideo
APP -> APP: Start local preview: \n agoraEngine.startPreview
APP -> API: Set the user role as host:  \n agoraEngine.setChannelProfile(ChannelProfileType.ChannelProfileLiveBroadcasting)
APP-> APP: Retrieve authentication token to join channel
APP -> API: Join a channel as host:\n agoraEngine.joinChannel
APP -> API: Send data stream
end

group Audience
USR -> APP: Join live streaming event
APP->APP: Retrieve authentication token to join channel
APP -> API: Set the user role as audience: \n agoraEngine.setChannelProfile(ClientRoleType.ClientRoleAudience)
APP -> API: Join the live streaming event:\n agoraEngine.joinChannel
API -> APP: Retrieve streaming from the other user: \n agoraEngine.setupRemoteVideo
end

USR -> APP: Leave live streaming event
APP -> API: agoraEngine.leaveChannel

@enduml
