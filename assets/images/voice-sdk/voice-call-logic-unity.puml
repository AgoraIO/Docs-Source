@startuml
!include agora_skin.iuml

actor "User" as USR

box "Your app"

participant "Voice SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open app
APP -> APP: Create an Agora Voice SDK engine instance: \n RtcEngine = Agora.Rtc.RtcEngine.CreateAgoraRtcEngine()
APP -> API: Set the context: \n RtcEngineContext context = new RtcEngineContext(_appID, 0, true,
            CHANNEL_PROFILE_TYPE.CHANNEL_PROFILE_LIVE_BROADCASTING,
            AUDIO_SCENARIO_TYPE.AUDIO_SCENARIO_DEFAULT)
APP -> APP: Initialize RtcEngine: \n RtcEngine.Initialize(context)

group Audio Call
USR -> APP: Start call
APP -> APP: Enable the audio module: \n RtcEngine.EnableAudio()
APP -> API: Set the user role as broadcaster: \n RtcEngine.SetClientRole(CLIENT_ROLE_TYPE.CLIENT_ROLE_BROADCASTER)
APP -> API: Join the channel: \n RtcEngine.JoinChannel()
API <-> APP: Receive and send data stream
end

USR -> APP: Leave the call
APP -> API: Leave the channel: \n RtcEngine.LeaveChannel()

USR -> APP: Close app
APP -> APP: Disable the audio modules: \n  RtcEngine.DisableAudio()

@enduml
