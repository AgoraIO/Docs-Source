@startuml
!include agora_skin.iuml

actor "User" as USR

box "Your game"

participant "Video SDK" as APP

end box

box "Agora"

participant "SD-RTN" as API

end box

USR -> APP: Open game
APP -> APP: Create an RtcEngine instance: \n RtcEngine = Agora::rtc::ue::CreateAgoraRtcEngine()
APP -> API: Set the context: \n RtcEngineContext context;
    \n context.appId = appId.c_str();
    \n context.eventHandler = this;
    \n context.channelProfile = CHANNEL_PROFILE_TYPE::CHANNEL_PROFILE_LIVE_BROADCASTING;
APP -> APP: Initialize RtcEngine: \n     agoraEngine->initialize(context);

group Video Call
USR -> APP: Start call
APP -> APP: Enable the video module: \n agoraEngine->enableVideo()
APP -> API: Set the user role as broadcaster: \n  agoraEngine->setClientRole(CLIENT_ROLE_TYPE::CLIENT_ROLE_BROADCASTER);
APP -> API: Join call: \n RtcEngine->joinChannel()
APP <-> API: Receive and send data stream
end

USR -> APP: Leave call
APP -> API: Leave the channel: \n agoraEngine->leaveChannel()
APP -> APP: Disable the video modules: \n agoraEngine->disableVideo()

USR -> APP: Close game
APP -> APP: Clean up local resources: \n   agoraEngine->release();

@enduml
