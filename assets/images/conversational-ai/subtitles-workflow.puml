@startuml
!include ../video-sdk/agora_skin.iuml

participant "App" as App
participant "Toolkit" as SDK  
participant "RTC/Signaling SDK" as RTC
participant "Conversational AI" as AI

group Initialization Phase
App -> RTC: 1. Create Video SDK and Signaling engine instances
App -> RTC: 2. Log in to Signaling
App -> SDK: 3. Create toolkit instance and \nconfigure rendering mode (Word/Text)  
note right: Ensure RTC and Signaling engine\n instances are created before using\nother features
App -> SDK: 4. Register event handler\n(addHandler)
App -> App: 5. Implement subtitle data callback\n(onTranscriptionUpdated)
end

group Start Conversation
App -> RTC: 6. User joins channel\n(joinChannel)
App -> SDK: 7. Subscribe to channel messages\n(subscribeMessage)
App -> AI: 8. Agent joins the channel\n(POST to create conversational AI)
App <-> AI: 9. User and AI start voice interaction
end

group Subtitle Processing
RTC -> SDK: 10. Receive original transcription data\n through Signaling messages (Agent/user voice)
SDK -> SDK: 11. Parse transcription data\n(by Agent/user transfer)
alt Agent Text Processing
    SDK -> SDK: 12. Process agent transcription content
    SDK -> App: 13. onTranscriptionUpdated\n(TranscriptionType.AGENT)
    App -> App: 14. Update agent text in UI\n(real-time completion/interrupt)
else User Text Processing
    SDK -> SDK: 15. Process user transcription content
    SDK -> App: 16. onTranscriptionUpdated\n(TranscriptionType.USER)
    App -> App: 17. Update user text in UI\n(real-time completion)
end
end

group End Conversation
App -> RTC: 18. Leave RTC channel\n(leaveChannel)
App -> SDK: 19. Unsubscribe from channel messages\n(unsubscribeMessage)
end

group Exit App
App -> SDK: 20. Destroy toolkit instance\n(destroy)
end

@enduml