@startuml authentication-logic
!include agora_skin.iuml

box "Implemented by you"
participant "Token server" as SVR
participant "App" as APP
end box

box "Provided by Agora"
participant "SD-RTN" as API
end box

group Join a channel with authentication
APP -> SVR: Request a token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user against \n internal security
APP <- SVR: Generate a token and return it to the client
APP -> API: Join a channel with uid, \nchannel name, and token
API -> API: Validate \nthe token
API -> APP: Trigger the callback after \nadding user to the channel
end

group Renew token
API -> APP: Trigger event: Token Privilege will Expire
APP -> SVR: Request a fresh token using channel name, \n role, token type, and user ID
SVR -> SVR: Validate user request against internal logic
APP <- SVR: Generate a fresh token and return it to the client
APP -> API: Send the fresh token \nwith a RenewToken request
end

@enduml
