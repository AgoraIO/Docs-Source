<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="794px" preserveAspectRatio="none" style="width:654px;height:794px;background:#00000000;" version="1.1" viewBox="0 0 654 794" width="654px" zoomAndPan="magnify"><defs/><g><rect fill="none" height="792.4063" style="stroke:#0A9EFD;stroke-width:1.0;" width="652.5" x="0" y="0"/><rect fill="#F3F3F3" height="782.4063" style="stroke:#0A9EFD;stroke-width:1.0;" width="95" x="154" y="6"/><text fill="#0A9EFD" font-family="Roboto" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="69" x="167" y="22.6094">Your app</text><rect fill="#F3F3F3" height="782.4063" style="stroke:#0A9EFD;stroke-width:1.0;" width="74" x="568.5" y="6"/><text fill="#0A9EFD" font-family="Roboto" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="46" x="582.5" y="22.6094">Agora</text><rect height="320.7031" style="stroke:#0A9EFD;stroke-width:2.0;fill:none;" width="638.5" x="10" y="104.6094"/><rect height="100.4375" style="stroke:#0A9EFD;stroke-width:2.0;fill:none;" width="500.5" x="148" y="439.3125"/><rect height="132.0469" style="stroke:#0A9EFD;stroke-width:2.0;fill:none;" width="638.5" x="10" y="553.75"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="39" x2="39" y1="87.6094" y2="702.7969"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="201" x2="201" y1="87.6094" y2="702.7969"/><line style="stroke:#0A9EFD;stroke-width:1.0;fill:none;stroke-dasharray:5.0,5.0;" x1="605.5" x2="605.5" y1="87.6094" y2="702.7969"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="33" x="20" y="84.5332">User</text><ellipse cx="39.5" cy="16" rx="8" ry="8" style="stroke:#0A9EFD;stroke-width:3.0;fill:none;"/><path d="M39.5,24 L39.5,51 M26.5,32 L52.5,32 M39.5,51 L26.5,66 M39.5,51 L52.5,66 " fill="none" style="stroke:#0A9EFD;stroke-width:3.0;"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="33" x="20" y="716.3301">User</text><ellipse cx="39.5" cy="730.4063" rx="8" ry="8" style="stroke:#0A9EFD;stroke-width:3.0;fill:none;"/><path d="M39.5,738.4063 L39.5,765.4063 M26.5,746.4063 L52.5,746.4063 M39.5,765.4063 L26.5,780.4063 M39.5,765.4063 L52.5,780.4063 " fill="none" style="stroke:#0A9EFD;stroke-width:3.0;"/><rect fill="#FFFFFF" height="31.6094" style="stroke:#0A9EFD;stroke-width:2.0;" width="87" x="158" y="55"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="73" x="165" y="76.5332">Video SDK</text><rect fill="#FFFFFF" height="31.6094" style="stroke:#0A9EFD;stroke-width:2.0;" width="87" x="158" y="701.7969"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="73" x="165" y="723.3301">Video SDK</text><rect fill="#FFFFFF" height="31.6094" style="stroke:#0A9EFD;stroke-width:2.0;" width="66" x="572.5" y="55"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="579.5" y="76.5332">SD-RTN</text><rect fill="#FFFFFF" height="31.6094" style="stroke:#0A9EFD;stroke-width:2.0;" width="66" x="572.5" y="701.7969"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="52" x="579.5" y="723.3301">SD-RTN</text><path d="M10,104.6094 L133,104.6094 L133,113.6094 L123,123.6094 L10,123.6094 L10,104.6094 " fill="#EEEEEE" style="stroke:#0A9EFD;stroke-width:1.0;"/><rect fill="none" height="320.7031" style="stroke:#0A9EFD;stroke-width:2.0;" width="638.5" x="10" y="104.6094"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="78" x="25" y="120.1426">Start a task</text><polygon fill="#0A9EFD" points="189.5,143.8281,199.5,147.8281,189.5,151.8281,193.5,147.8281" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="39.5" x2="195.5" y1="147.8281" y2="147.8281"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="138" x="51.5" y="142.752">Start speech to text</text><polygon fill="#0A9EFD" points="593.5,175.4375,603.5,179.4375,593.5,183.4375,597.5,179.4375" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="201.5" x2="599.5" y1="179.4375" y2="179.4375"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="380" x="213.5" y="174.3613">Send an HTTP POST request to acquire a builderToken</text><polygon fill="#0A9EFD" points="212.5,207.0469,202.5,211.0469,212.5,215.0469,208.5,211.0469" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="206.5" x2="604.5" y1="211.0469" y2="211.0469"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="255" x="276" y="205.9707">Receive a builderToken in response</text><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="201.5" x2="243.5" y1="242.6563" y2="242.6563"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="243.5" x2="243.5" y1="242.6563" y2="255.6563"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="202.5" x2="243.5" y1="255.6563" y2="255.6563"/><polygon fill="#0A9EFD" points="212.5,251.6563,202.5,255.6563,212.5,259.6563,208.5,255.6563" style="stroke:#0A9EFD;stroke-width:1.0;"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="374" x="208.5" y="237.5801">Create JSON configuration for starting speech to text</text><polygon fill="#0A9EFD" points="593.5,300.875,603.5,304.875,593.5,308.875,597.5,304.875" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="201.5" x2="599.5" y1="304.875" y2="304.875"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="301" x="251" y="282.1895">Send an HTTP POST request containing the</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="362" x="222.5" y="299.7988">builderToken and JSON configuration to start a task</text><polygon fill="#0A9EFD" points="212.5,332.4844,202.5,336.4844,212.5,340.4844,208.5,336.4844" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="206.5" x2="604.5" y1="336.4844" y2="336.4844"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="296" x="255.5" y="331.4082">Receive the status and taskId in response</text><polygon fill="#0A9EFD" points="212.5,381.7031,202.5,385.7031,212.5,389.7031,208.5,385.7031" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="206.5" x2="604.5" y1="385.7031" y2="385.7031"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="190" x="306.5" y="363.0176">Receive the speech to text</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="172" x="317.5" y="380.627">data stream in a callback</text><polygon fill="#0A9EFD" points="50.5,413.3125,40.5,417.3125,50.5,421.3125,46.5,417.3125" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="44.5" x2="200.5" y1="417.3125" y2="417.3125"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="108" x="66.5" y="412.2363">Display the text</text><path d="M148,439.3125 L315,439.3125 L315,448.3125 L305,458.3125 L148,458.3125 L148,439.3125 " fill="#EEEEEE" style="stroke:#0A9EFD;stroke-width:1.0;"/><rect fill="none" height="100.4375" style="stroke:#0A9EFD;stroke-width:2.0;" width="500.5" x="148" y="439.3125"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="122" x="163" y="454.8457">Query task status</text><polygon fill="#0A9EFD" points="593.5,496.1406,603.5,500.1406,593.5,504.1406,597.5,500.1406" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="201.5" x2="599.5" y1="500.1406" y2="500.1406"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="265" x="269" y="477.4551">Send an HTTP GET request containing</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="211" x="298" y="495.0645">the taskId to query task status</text><polygon fill="#0A9EFD" points="212.5,527.75,202.5,531.75,212.5,535.75,208.5,531.75" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="206.5" x2="604.5" y1="531.75" y2="531.75"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="276" x="265.5" y="526.6738">Receive the current status in response</text><path d="M10,553.75 L147,553.75 L147,562.75 L137,572.75 L10,572.75 L10,553.75 " fill="#EEEEEE" style="stroke:#0A9EFD;stroke-width:1.0;"/><rect fill="none" height="132.0469" style="stroke:#0A9EFD;stroke-width:2.0;" width="638.5" x="10" y="553.75"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="92" x="25" y="569.2832">Stop the task</text><polygon fill="#0A9EFD" points="189.5,592.9688,199.5,596.9688,189.5,600.9688,193.5,596.9688" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="39.5" x2="195.5" y1="596.9688" y2="596.9688"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="137" x="52" y="591.8926">Stop speech to text</text><polygon fill="#0A9EFD" points="593.5,642.1875,603.5,646.1875,593.5,650.1875,597.5,646.1875" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="201.5" x2="599.5" y1="646.1875" y2="646.1875"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="212" x="295.5" y="623.502">Send an HTTP DELETE request</text><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="260" x="273.5" y="641.1113">containing the taskId to stop the task</text><polygon fill="#0A9EFD" points="212.5,673.7969,202.5,677.7969,212.5,681.7969,208.5,677.7969" style="stroke:#0A9EFD;stroke-width:1.0;"/><line style="stroke:#0A9EFD;stroke-width:2.0;" x1="206.5" x2="604.5" y1="677.7969" y2="677.7969"/><text fill="#0A9EFD" font-family="Roboto" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="282" x="262.5" y="672.7207">Receive a response confirming success</text><!--MD5=[0d8bf142e1228ae4eeb8cc96bd25aeaf]
@startuml 
!include agora_skin.iuml

actor "User" as USR

box "Your app"
participant "Video SDK" as APP
end box

box "Agora"
participant "SD-RTN" as API
end box

group Start a task
USR -> APP: Start speech to text

APP -> API: Send an HTTP POST request to acquire a builderToken
APP <- API: Receive a builderToken in response

APP -> APP: Create JSON configuration for starting speech to text
APP -> API: Send an HTTP POST request containing the \nbuilderToken and JSON configuration to start a task
APP <- API: Receive the status and taskId in response
APP <- API: Receive the speech to text \ndata stream in a callback
USR <- APP: Display the text
end

group Query task status
APP -> API: Send an HTTP GET request containing \nthe taskId to query task status
APP <- API: Receive the current status in response
end

group Stop the task
USR -> APP: Stop speech to text
APP -> API: Send an HTTP DELETE request \ncontaining the taskId to stop the task
APP <- API: Receive a response confirming success
end

@enduml

@startuml 

scale max 1000 width
skinparam linetype ortho
hide stereotype

skinparam backgroundColor transparent
skinparam Shadowing false
skinparam BoundaryBackgroundColor transparent
skinparam BoundaryBorderColor #0a9efdff
skinparam DiagramBorderColor #0a9efdff
skinparam defaultTextAlignment center
skinparam SequenceMessageAlign center
skinparam ReferenceBorderThickness 2

skinparam sequence {

    ActorBorderThickness 3
   	ActorBorderColor #0a9efdff
	ActorBackgroundColor transparent
	ActorFontColor #0a9efdff
	ActorFontName Roboto
    ActorFontStyle bold
    ActorFontSize 14

    AgentBackgroundColor #0a9efdff

   	ArrowFontColor #0a9efdff
   	ArrowFontSize 14
   	ArrowFontStyle bold
    ArrowColor #ee4c14
    ArrowThickness 2

    RectangleBorderThickness 3
    BoxBackgroundColor #f3f3f3
    BoxBorderColor #0a9efdff

   	BoxFontColor #0a9efdff
   	BoxFontName Roboto
   	BoxFontStyle bold
   	BoxFontSize 16

    BoundaryBackgroundColor #0a9efdff
    BoundaryBorderColor #0a9efdff
    BoundaryFontColor #0a9efdff
    BoundryFontName Roboto
    BoundaryStereotypeFontColor #0a9efdff

    ClassBorderColor #0a9efdff
    ComponentBorderColor #0a9efdff

    DividerBackgroundColor white
    DividerBorderColor #0a9efdff
    DividerBorderThickness 3
    DividerFontColor #0a9efdff
    DividerFontName Roboto
    DividerFontSize bold
    DividerFontStyle 14

    GroupBorderColor #0a9efdff
    GroupBorderThickness 2
    GroupFontName Roboto
    GroupFontSize 14
    GroupFontColor #0a9efdff
    GroupHeaderFontColor #0a9efdff
    GroupHeaderFontName Roboto
    GroupHeaderFontSize 14
    GroupHeaderFontStyle bold

   	LifeLineBorderColor #0a9efdff
   	LifeLineBackgroundColor #0a9efdff
   	LifeLineFontColor  #0a9efdff

   	ParticipantBorderColor #0a9efdff
   	ParticipantBackgroundColor white
   	ParticipantFontSize 14
   	ParticipantFontStyle bold
   	ParticipantFontName Roboto
   	ParticipantFontColor #0a9efdff
    ParticipantBorderThickness 2

    ReferenceBorderThickness 2



    TitleFontColor #0a9efdff
    TitleFontName Roboto
    TitleFontSize 18
    TitleBorderThickness 5

}
skinparam interface {
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff
  BorderThickness 1
  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bolds

}


skinparam usecase {
  BackgroundColor #FFFFFF
  BorderColor #ee4c14
  BorderThickness 1
  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam note {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 1

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam activity {

  BackgroundColor #FFFFFF
  DiamondBackgroundColor #FFFFFF
  DiamondBorderColor #0a9efdff
  BorderColor #0a9efdff
  BorderThickness 4
  DiamondBackgroundColor #FFFFFF
  DiamondBorderColor #0a9efdff
  DiamondFontColor #0a9efdff
  activityDiamondFontName Roboto
  activityDiamondFontSize 14
  DiamondFontStyle bold
  StartColor #0a9efdff
  StopColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam card {
  BackgroundColor transparent
  BorderColor transparent
  BorderThickness 0
  FontColor transparent
}


skinparam rectangle {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam agent {

  BackgroundColor #FFFFFF
  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam folder {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam file {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

  shadowing true
}

skinparam cloud {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 4

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam class {

  BackgroundColor #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 1

  StartColor #0a9efdff
  BarColor #0a9efdff
  EndColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold



}

skinparam component {

  BackgroundColor  #FFFFFF

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold
}



skinparam database {

  BackgroundColor #f3f3f3

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}


skinparam frame {

  ArrowColor #0a9efdff

  BackgroundColor #f3f3f3
  BorderColor #0a9efdff
  BorderThickness 4

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold
}


skinparam node {

  ArrowColor #0a9efdff

  BorderThickness 2
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam package {
  BorderThickness 2
  BackgroundColor #FFFFFF
  BorderColor #0a9efdff

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}


skinparam partition {

  BackgroundColor #f3f3f3

  BorderColor #0a9efdff
  BorderThickness 2

  FontColor #0a9efdff
  FontName Roboto
  FontSize 14
  FontStyle bold

}

skinparam ArrowFontColor #0a9efdff
skinparam ArrowFontSize 14
skinparam ArrowFontStyle bold
skinparam ArrowColor #0a9efdff
skinparam ArrowThickness 2
skinparam ArrowFontName Roboto

skinparam linetype ortho
hide stereotype








actor "User" as USR

box "Your app"
participant "Video SDK" as APP
end box

box "Agora"
participant "SD-RTN" as API
end box

group Start a task
USR -> APP: Start speech to text

APP -> API: Send an HTTP POST request to acquire a builderToken
APP <- API: Receive a builderToken in response

APP -> APP: Create JSON configuration for starting speech to text
APP -> API: Send an HTTP POST request containing the \nbuilderToken and JSON configuration to start a task
APP <- API: Receive the status and taskId in response
APP <- API: Receive the speech to text \ndata stream in a callback
USR <- APP: Display the text
end

group Query task status
APP -> API: Send an HTTP GET request containing \nthe taskId to query task status
APP <- API: Receive the current status in response
end

group Stop the task
USR -> APP: Stop speech to text
APP -> API: Send an HTTP DELETE request \ncontaining the taskId to stop the task
APP <- API: Receive a response confirming success
end

@enduml

PlantUML version 1.2022.1(Tue Feb 01 23:19:58 PKT 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>